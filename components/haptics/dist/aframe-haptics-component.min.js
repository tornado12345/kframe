!function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("haptics",{dependencies:["tracked-controls"],schema:{actuatorIndex:{default:0},dur:{default:100},enabled:{default:!0},events:{type:"array"},eventsFrom:{type:"string"},force:{default:1}},multiple:!0,init:function(){var e=(this.data,this);if(this.callPulse=function(){e.pulse()},this.el.components["tracked-controls"].controller){if(this.gamepad=this.el.components["tracked-controls"].controller,!this.gamepad.hapticActuators.length)return;this.addEventListeners()}else this.el.addEventListener("controllerconnected",function(){setTimeout(function(){e.gamepad=e.el.components["tracked-controls"].controller,e.gamepad.hapticActuators.length&&e.addEventListeners()},150)})},remove:function(){this.removeEventListeners()},pulse:function(e,t){var n,r=this.data;r.enabled&&this.gamepad&&this.gamepad.hapticActuators&&(n=this.gamepad.hapticActuators[r.actuatorIndex],n.pulse(e||r.force,t||r.dur))},addEventListeners:function(){var e,t,n=this.data;for(t=n.eventsFrom?document.querySelector(n.eventsFrom):this.el,e=0;e<n.events.length;e++)t.addEventListener(n.events[e],this.callPulse)},removeEventListeners:function(){var e,t,n=this.data;for(t=n.eventsFrom?document.querySelector(n.eventsFrom):this.el,e=0;e<n.events.length;e++)t.removeEventListener(n.events[e],this.callPulse)}})}]);